
machine PowerManager {

  event button_on;
  event button_off;
  event request_high_compute_performance;
  
  internal event testLowSpeed;
  internal event testSuspendToFLASH;

  PersistentStorage persistent_storage;
  Environment environment;

  initial state bootup {
    entry {
      if (persistent_storage.should_restore_from_FLASH()) {
	transition restoring_from_FLASH;
      } else {
	transition high_speed;
      }
    }

    event button_on {}
    event button_off {}	
  }

  state low_speed {
    entry {
      // set CPU in low-speed
    }
    
    event button_on {}
    event button_off {transition suspending_to_RAM; }
    event testSuspendToFLASH {}
    event testLowSpeed  {}
    event request_high_compute_performance {
      transition high_speed;
    }
  }

  state high_speed {
    entry {
      emit request_high_compute_performance;	
      after secs(1) emit testLowSpeed;
    }

    event testLowSpeed  { transition low_speed; }
    event button_on     { }
    event button_off    { transition suspending_to_RAM; }
    event request_high_compute_performance {}
    event testSuspendToFLASH {}
  }

  // RAM

  state suspending_to_RAM {
    entry {
      // shutdown peripherals.
      transition suspended_to_RAM;
    }
  }

  state suspended_to_RAM {
        SuspendToFlashStrategy strategy;

 	entry {
	  strategy.init();
	  after secs(1) emit testSuspendToFLASH;
	}

	event testLowSpeed  { }
	event button_on     { transition restoring_from_RAM; }
	event button_off    { transition suspending_to_FLASH; }
        event request_high_compute_performance {}
	event testSuspendToFLASH {
	  if (environment.need_wakeup()) {
	    transition restoring_from_RAM;
	  } else {
	    if (strategy.shouldSuspendToFLASH()) {
	      transition suspending_to_FLASH;
	    } else {
	      after secs(1) emit testSuspendToFLASH;
	    }
	  }
	}
  }

  state restoring_from_RAM {
    entry {
      transition high_speed;
    }
  }

  // FLASH

  state suspending_to_FLASH {
    entry {
      // do write ops here.
      transition suspended_to_FLASH;
    }
  }

  state suspended_to_FLASH {
    entry {		   
      persistent_storage.notify_stored_in_FLASH();
      // shutdown CPU
      transition bootup;
    }
  }

  state restoring_from_FLASH {
    entry {
      // do reverse of suspending_to_FLASH
      persistent_storage.notify_restored_from_FLASH();
      transition high_speed;
    }
  }
}


testsuite buttonPresserTest {
  test simple {
  }
}
